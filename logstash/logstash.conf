input {
  beats {
    port => 5044
  }
}

filter {


  grok {
    patterns_dir => ["./patterns"]
    match => { "message" => "%{TIMESTAMP_ISO8601:log_time} %{LOGLEVEL:level}(?:%{SPACE})? %{NOTSPACE:thread_name} %{JAVACLASS:logger_class} %{JAVAMETHOD:logger_method} %{NUMBER:logger_line} %{NOTSPACE}:(?:%{NOTSPACE:trace_id})? - %{JAVALOGMESSAGE:message}" }
    overwrite => ["message"]
  }
  
  grok {
    match => { "[log][file][path]" => "${LOG_DIR}/%{NOTSPACE:app_id}/%{NOTSPACE}-%{NOTSPACE:log_type}.log" }
  }

  if [log_type] == "invoke" {
    grok {
      match => { "message" => "\[ClientIP:%{IP:client_ip}\]" }
    }
    geoip {
      source => "client_ip"
    }
  }

}


output {
#  stdout { codec => rubydebug }
  elasticsearch {
    hosts => ["http://es01:9200","http://es02:9200"]
    user => "logstash_writer"
    password => "1357qetu"
    manage_template => false
    index => "service-log-%{+YYYY.MM.dd}"
  }
}
